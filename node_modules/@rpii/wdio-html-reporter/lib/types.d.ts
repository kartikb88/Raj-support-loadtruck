import { Reporters } from "@wdio/types";
import { RunnerStats, SuiteStats, TestStats } from "@wdio/reporter";
export declare class HtmlReporterOptions implements Reporters.Options {
    outputDir: string;
    filename: string;
    reportTitle: string;
    templateFilename?: string | undefined;
    templateFuncs?: object | undefined;
    showInBrowser?: boolean | undefined;
    collapseTests?: boolean | undefined;
    collapseSuites?: boolean | undefined;
    useOnAfterCommandForScreenshot?: boolean | undefined;
    LOG?: any;
    debug?: boolean | undefined;
    browserName: string;
    removeOutput?: boolean | undefined;
    constructor();
}
export declare class Metrics {
    passed: number;
    skipped: number;
    failed: number;
    start: string;
    end: string;
    duration: number;
    constructor();
}
export declare class SuiteInfo {
    suite: SuiteStats;
    type: string;
    tests: TestInfo[];
    constructor(type: string, suiteStats: SuiteStats);
}
export declare class TestInfo {
    testStats: TestStats;
    events: InternalReportEvent[];
    errorIndex: number;
    constructor(test: TestStats);
}
export declare class InternalReportEvent {
    type: string;
    value: any;
    constructor(type: string, value: any);
}
export declare class ReportData {
    info: RunnerStats;
    metrics: Metrics;
    suites: SuiteInfo[];
    title: string;
    reportFile: string;
    browserName: string;
    constructor(title: string, info: RunnerStats, suites: SuiteInfo[], metrics: Metrics, reportFile: string, browserName: string);
}
